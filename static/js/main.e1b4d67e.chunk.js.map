{"version":3,"sources":["ListCom.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["ListCom","props","useState","line","setLine","className","onClick","style","textDecoration","text","TodoList","item","setItem","newItem","setNewItem","type","value","placeholder","onChange","event","target","Button","prevValue","map","val","index","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAwBeA,EArBC,SAACC,GAAW,IAAD,EAEDC,oBAAS,GAFR,mBAEjBC,EAFiB,KAEZC,EAFY,KAQvB,OACI,sBAAKC,UAAU,aAAf,UACI,sBAAMC,QALd,WACIF,GAAQ,IAIJ,SACI,cAAC,IAAD,CAAkBC,UAAU,iBAGhC,oBAAIE,MAAO,CAAEC,eAAgBL,EAAO,eAAiB,QAArD,SAAgEF,EAAMQ,WCsCnEC,EAjDE,WAAO,IAAD,EAEGR,mBAAS,IAFZ,mBAEbS,EAFa,KAERC,EAFQ,OAGSV,mBAAS,IAHlB,mBAGbW,EAHa,KAGLC,EAHK,KAgBnB,OACI,mCACI,qBAAKT,UAAU,WAAf,SACI,sBAAKA,UAAU,aAAf,UACI,uBACI,2CACJ,uBAEA,uBAAOU,KAAK,OAAOC,MAAOL,EAAMM,YAAY,gBAAgBC,SAnB5E,SAAmBC,GACfP,EAAQO,EAAMC,OAAOJ,UAmBT,cAACK,EAAA,EAAD,CAAQhB,UAAU,SAASC,QAhB3C,WACIQ,GAAW,SAACQ,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAqBX,OAEzBC,EAAQ,KAYI,SAAkD,cAAC,IAAD,MAGlD,6BAGKC,EAAQU,KAAI,SAACC,EAAIC,GAGd,OAAO,cAAC,EAAD,CAAqBhB,KAAMe,GAAbC,gBC5BlCC,MATf,WACE,OACE,mCACA,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e1b4d67e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nconst ListCom = (props) => {\r\n\r\n    const[line,setLine] = useState(false)\r\n\r\n\r\n    function cutIt() {\r\n        setLine(true);\r\n    }\r\n    return (\r\n        <div className=\"todo_style\">\r\n            <span onClick={cutIt}>\r\n                <HighlightOffIcon className=\"deleteIcon\"/>\r\n            </span>\r\n            \r\n            <li style={{ textDecoration: line ? \"line-through\" : \"none\" }}>{props.text}</li>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListCom\r\n\r\n\r\n// Coded ny me:\r\n// import React, { useState } from 'react'\r\n// import HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\n// const ListItem = (props) => {\r\n\r\n//     const [line,setLine] = useState(false);\r\n\r\n//     function Happen(){\r\n//         setLine(true);\r\n//     }\r\n//     return (\r\n//         <div className=\"todo_style\">\r\n//             <span onClick={Happen}><HighlightOffIcon className=\"deleteIcon\" /></span>\r\n//             <li style={{textDecoration: line ? \"line-through\" : \"none\"}}>{props.text}</li>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ListItem\r\n","import React, { useState } from 'react'\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ListCom from './ListCom';\r\n\r\nconst TodoList = () => {\r\n\r\n    const[item,setItem] = useState(\"\");\r\n    const[newItem,setNewItem] = useState([])\r\n\r\n    function itemEvent(event){\r\n        setItem(event.target.value);\r\n\r\n    }\r\n    function newItemList(){\r\n        setNewItem((prevValue) =>{\r\n            return [...prevValue,item]\r\n        })\r\n        setItem(\"\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main_div\">\r\n                <div className=\"center_div\">\r\n                    <br></br>\r\n                        <h1>TODO-LIST</h1>\r\n                    <br></br>\r\n                     {/* Note: What ever we store the value in setItem it comes from \"value\" attribute of Input tag only.  */}\r\n                    <input type=\"text\" value={item} placeholder=\"Enter an Item\" onChange={itemEvent}/>\r\n                    <Button className='newBtn' onClick={newItemList} ><AddCircleIcon /></Button>\r\n\r\n                    \r\n                    <ol>\r\n\r\n\r\n                        {newItem.map((val,index) => {\r\n\r\n\r\n                            return <ListCom key={index} text={val}/> ;\r\n\r\n\r\n                        })}\r\n\r\n\r\n                    </ol>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n\r\n//Coded Practiced By me:\r\n// import React, { useState } from 'react';\r\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n// import Button from '@material-ui/core/Button';\r\n// import AddIcon from '@material-ui/icons/Add';\r\n// import ListItem from './ListItem';\r\n\r\n\r\n\r\n// const TodoApp = () => {\r\n\r\n\r\n   \r\n\r\n//     const [item, setItem] = useState(\"\");\r\n//     const [newItem,setNewItem] = useState([])\r\n\r\n//     function keepItem(event) {\r\n//         setItem(event.target.value)\r\n//     }\r\n//     function newItemList(){\r\n//         setNewItem((prevValue)=>{return [...prevValue, item]});\r\n//         setItem(\"\");\r\n//     }\r\n//     return (\r\n//         <>\r\n//          <div className=\"main_div\">\r\n//             <div className=\"center_div\">\r\n//                 <br></br>\r\n//                 <h1>TODO-LIST</h1>\r\n//                 <br></br>\r\n               \r\n//                 <input type=\"text\" value={item} placeholder=\"Enter Your Item\" onChange={keepItem}/> \r\n                \r\n                \r\n//                 <Button className=\"newBtn\" onClick={newItemList} ><AddIcon /></Button>\r\n//                 <ol>\r\n//                     {newItem.map((val,index) => {return(<ListItem key={index} text={val}/>)})}\r\n                    \r\n//                 </ol>\r\n//             </div>\r\n//          </div>\r\n\r\n        \r\n        \r\n//         </>\r\n       \r\n//     )\r\n// }\r\n\r\n// export default TodoApp\r\n","import React from \"react\";\r\nimport TodoList from \"./TodoList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <TodoList />\r\n    \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}